import java.util.*;

class Main
{
	static Scanner in=new Scanner(System.in);
    
	public static void main(String[] args) 
	{
		char[][] arr=new char[256][256];
		char command, color, newColor;
		int i, j, k, x, y, x1, x2, y1, y2, M=0, N=0;
		do
		{
			String Input=in.nextLine();
			String[] InputSplit=Input.split(" ");
			
			command=InputSplit[0].toCharArray()[0];
			switch(command)
			{
				case 'I':
					M=Integer.parseInt(InputSplit[1]);
					N=Integer.parseInt(InputSplit[2]);
					setColorToO(arr, N, M);
					break;
				
				case 'C':
					setColorToO(arr, N, M);
					break;
				
				case 'L':
					x=Integer.parseInt(InputSplit[1]);
					y=Integer.parseInt(InputSplit[2]);
					color=InputSplit[3].toCharArray()[0];
					arr[y][x]=color;
					break;
				
				case 'V':
					x=Integer.parseInt(InputSplit[1]);
					y1=Integer.parseInt(InputSplit[2]);
					y2=Integer.parseInt(InputSplit[3]);
					color=InputSplit[4].toCharArray()[0];
					if(y1 > y2)
					{
						int t=y1;
						y1=y2;
						y2=t;
					}
					for(i=y1; i <= y2; i++)
					{
						arr[i][x]=color;
					}
					break;
				
				case 'H':
					x1=Integer.parseInt(InputSplit[1]);
					x2=Integer.parseInt(InputSplit[2]);
					y=Integer.parseInt(InputSplit[3]);
					color=InputSplit[4].toCharArray()[0];
					if(x1 >x2)
					{
						int t=x1;
						x1=x2;
						x2=t;
					}
					for(i=x1; i <= x2; i++)
					{
						arr[y][i]=color;
					}
					break;
				
				case 'K':
					x1=Integer.parseInt(InputSplit[1]);
					y1=Integer.parseInt(InputSplit[2]);
					x2=Integer.parseInt(InputSplit[3]);
					y2=Integer.parseInt(InputSplit[4]);
					color=InputSplit[5].toCharArray()[0];
					
					if(y1 > y2)
					{
						int t=y1;
						y1=y2;
						y2=t;
					}
					
					if(x1 > x2)
					{
						int t=x1;
						x1=x2;
						x2=t;
					}
					for(i=y1; i <= y2; i++)
					{
						for(j=x1; j <= x2; j++)
						{
							arr[i][j]=color;
						}
					}
					break;
				
				case 'F':
					y=Integer.parseInt(InputSplit[1]);
					x=Integer.parseInt(InputSplit[2]);
					newColor=InputSplit[3].toCharArray()[0];
					
					color=arr[x][y];
					fillRange(arr, x, y, color, newColor, N, M);
					break;
				
				case 'S':
					String fileName=InputSplit[1];
					System.out.println(fileName);
					display2DArray(arr, N, M);
					break;
				
				case 'X'://exit(0);//or loop will terminate automatically
					break;
			}
			
		} while(command != 'X');
	}//main
	
	static void setColorToO(char[][] arr, int N, int M)
	{
		for(int i=1; i <= N; i++)
		{
			for(int j=1; j <= M; j++)
			{
				arr[i][j]='O';
			}
		}
	}
	
	static void display2DArray(char arr[][], int x, int y)
	{
		for(int i=1; i <= x; i++)
		{
			for(int j=1; j <= y; j++)
			{
				System.out.print(arr[i][j]);
			}
			System.out.println();
		}
	}
	
	static void fillRange(char arr[][], int x, int y, char oldColor, char newColor, int N, int M)
	{
		if(newColor == oldColor)
		{
			return;
		}
		arr[x][y]=newColor;
		if(x + 1 <= N && arr[x + 1][y] == oldColor)
		{
			fillRange(arr, x + 1, y, oldColor, newColor, N, M);
		}
		if(x - 1 >= 0 && arr[x - 1][y] == oldColor)
		{
			fillRange(arr, x - 1, y, oldColor, newColor, N, M);
		}
		if(y + 1 <= M && arr[x][y + 1] == oldColor)
		{
			fillRange(arr, x, y + 1, oldColor, newColor, N, M);
		}
		if(x - 1 >= 0 && arr[x][y - 1] == oldColor)
		{
			fillRange(arr, x, y - 1, oldColor, newColor, N, M);
		}
	}
	
}//class
