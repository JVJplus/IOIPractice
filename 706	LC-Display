import java.util.*;

class Main
{
	static Scanner in=new Scanner(System.in);
	
	public static void main(String[] args)
	{
		//pattern[digit][line_number][index]
		char[][][] pattern=new char[10][5][3];
		
		setDefaultCharacters(pattern);
		
		
		while(true)
		{
			int size=in.nextInt();
			int nos=in.nextInt();
			if(size==0&&nos==0)
			{
				break;
			}
			String number=""+nos;
			
			{//real work
				int middle, digit, lineNo, digitLengthIterator, k, l, m, n;
				n=(2 * size) + 3;
				m=size + 2;
				middle=Math.round(n / 2);//(int) ((size / 2.0) + 0.5);
				
				for(lineNo=0; lineNo < n; lineNo++)//no of lines
				{
					for(digitLengthIterator=0; digitLengthIterator < number.length(); digitLengthIterator++)//digit
					{
						digit=Integer.parseInt("" + number.charAt(digitLengthIterator));
						{
							if(lineNo < middle && lineNo > 0)
							{
								printLinesBeforeMiddle(pattern[digit], size);
							}
							
							if(lineNo > middle && lineNo < n - 1)
							{
								printLinesAfterMiddle(pattern[digit], size);
							}
							
							if(lineNo == middle)
							{
								printMiddleLine(pattern[digit], size);
							}
							
							if(lineNo == n - 1)
							{
								printLastLine(pattern[digit], size);
							}
							
							if(lineNo == 0)
							{
								printFirstLine(pattern[digit], size);
							}
						}
						if(digitLengthIterator != number.length() - 1)
						{
							System.out.print(" ");
						}
					}
					if(lineNo != n)
					{
						System.out.println();
					}
				}// lineNo loop
				System.out.println(); //seprating test cases
			}//process
		}//while loop
	}//main
	
	
	public static void printFirstLine(char[][] chars, int size)
	{
		int k;
		System.out.print(chars[0][0]);
		for(k=0; k < size; k++)
		{
			System.out.print(chars[0][1]);
		}
		System.out.print(chars[0][2]);
	}
	
	public static void printLastLine(char[][] chars, int size)
	{
		int k;
		System.out.print(chars[4][0]);
		for(k=0; k < size; k++)
		{
			System.out.print(chars[4][1]);
		}
		System.out.print(chars[4][2]);
	}
	
	public static void printMiddleLine(char[][] chars, int size)
	{
		int k;
		System.out.print(chars[2][0]);
		for(k=0; k < size; k++)
		{
			System.out.print(chars[2][1]);
		}
		System.out.print(chars[2][2]);
	}
	
	public static void printLinesAfterMiddle(char[][] chars, int size)
	{
		int k;
		System.out.print(chars[3][0]);
		for(k=0; k < size; k++)
		{
			System.out.print(chars[3][1]);
		}
		System.out.print(chars[3][2]);
	}
	
	public static void printLinesBeforeMiddle(char[][] chars, int size)
	{
		int k;
		System.out.print(chars[1][0]);
		for(k=0; k < size; k++)
		{
			System.out.print(chars[1][1]);
		}
		System.out.print(chars[1][2]);
	}
	
	public static void setDefaultCharacters(char[][][] pattern)
	{
		pattern[0][0]=new char[]{' ', '-', ' '};
		pattern[0][1]=new char[]{'|', ' ', '|'};
		pattern[0][2]=new char[]{' ', ' ', ' '};
		pattern[0][3]=new char[]{'|', ' ', '|'};
		pattern[0][4]=new char[]{' ', '-', ' '};
		
		pattern[1][0]=new char[]{' ', ' ', ' '};
		pattern[1][1]=new char[]{' ', ' ', '|'};
		pattern[1][2]=new char[]{' ', ' ', ' '};
		pattern[1][3]=new char[]{' ', ' ', '|'};
		pattern[1][4]=new char[]{' ', ' ', ' '};
		
		pattern[2][0]=new char[]{' ', '-', ' '};
		pattern[2][1]=new char[]{' ', ' ', '|'};
		pattern[2][2]=new char[]{' ', '-', ' '};
		pattern[2][3]=new char[]{'|', ' ', ' '};
		pattern[2][4]=new char[]{' ', '-', ' '};
		
		pattern[3][0]=new char[]{' ', '-', ' '};
		pattern[3][1]=new char[]{' ', ' ', '|'};
		pattern[3][2]=new char[]{' ', '-', ' '};
		pattern[3][3]=new char[]{' ', ' ', '|'};
		pattern[3][4]=new char[]{' ', '-', ' '};
		
		pattern[4][0]=new char[]{' ', ' ', ' '};
		pattern[4][1]=new char[]{'|', ' ', '|'};
		pattern[4][2]=new char[]{' ', '-', ' '};
		pattern[4][3]=new char[]{' ', ' ', '|'};
		pattern[4][4]=new char[]{' ', ' ', ' '};
		
		pattern[5][0]=new char[]{' ', '-', ' '};
		pattern[5][1]=new char[]{'|', ' ', ' '};
		pattern[5][2]=new char[]{' ', '-', ' '};
		pattern[5][3]=new char[]{' ', ' ', '|'};
		pattern[5][4]=new char[]{' ', '-', ' '};
		
		pattern[6][0]=new char[]{' ', '-', ' '};
		pattern[6][1]=new char[]{'|', ' ', ' '};
		pattern[6][2]=new char[]{' ', '-', ' '};
		pattern[6][3]=new char[]{'|', ' ', '|'};
		pattern[6][4]=new char[]{' ', '-', ' '};
		
		pattern[7][0]=new char[]{' ', '-', ' '};
		pattern[7][1]=new char[]{' ', ' ', '|'};
		pattern[7][2]=new char[]{' ', ' ', ' '};
		pattern[7][3]=new char[]{' ', ' ', '|'};
		pattern[7][4]=new char[]{' ', ' ', ' '};
		
		pattern[8][0]=new char[]{' ', '-', ' '};
		pattern[8][1]=new char[]{'|', ' ', '|'};
		pattern[8][2]=new char[]{' ', '-', ' '};
		pattern[8][3]=new char[]{'|', ' ', '|'};
		pattern[8][4]=new char[]{' ', '-', ' '};
		
		pattern[9][0]=new char[]{' ', '-', ' '};
		pattern[9][1]=new char[]{'|', ' ', '|'};
		pattern[9][2]=new char[]{' ', '-', ' '};
		pattern[9][3]=new char[]{' ', ' ', '|'};
		pattern[9][4]=new char[]{' ', '-', ' '};
	}
	
}//class
