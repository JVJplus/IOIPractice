#include<bits/stdc++.h>

#define ll long long int
#define mp(a, b) make_pair(a,b)
#define vi vector<int>
#define pb(a) push_back(a)
#define mod 1000000007
#define all(x) x.begin(),x.end()
#define AIN(a, n, b) assert(a<=n && n<=b)


using namespace std;

template<class T>
void acceptArray(T arr[], int size)
{
    for (int i = 0; i < size; i++)
        cin >> arr[i];
}

template<class T>
void displayArray(T arr[], int size)
{
    for (int i = 0; i < size; i++)
        cout << arr[i] << " ";
    cout << endl;
}


//Program Part
char arr[256][256];

void display2DArray(int x, int y)
{
    for (int i = 1; i <= x; i++)
    {
        for (int j = 1; j <= y; j++)
            cout << arr[i][j];
        cout << endl;
    }
}

void fillRange(int x, int y, char oldColor, char newColor, int N, int M)
{
    if (newColor == oldColor)
        return;
    arr[x][y] = newColor;
    if (x + 1 <= N && arr[x + 1][y] == oldColor)
        fillRange(x + 1, y, oldColor, newColor, N, M);
    if (x - 1 >= 0 && arr[x - 1][y] == oldColor)
        fillRange(x - 1, y, oldColor, newColor, N, M);
    if (y + 1 <= M && arr[x][y + 1] == oldColor)
        fillRange(x, y + 1, oldColor, newColor, N, M);
    if (x - 1 >= 0 && arr[x][y - 1] == oldColor)
        fillRange(x, y - 1, oldColor, newColor, N, M);
}

void setColorToO(int N, int M)
{
    for (int i = 1; i <= N; i++)
        for (int j = 1; j <= M; j++)
            arr[i][j] = 'O';
}

int main()
{
    char command, color, newColor;
    int i, j, k, M, N, X, Y, X1, Y1, X2, Y2;
    string fileName;

    do
    {
        cin >> command;
        switch (command)
        {
            case 'I':
                cin >> M >> N; //length, no of lines
                setColorToO(N, M);
                break;

            case 'C':
                setColorToO(N, M);
                break;

            case 'L':
                cin >> X >> Y >> color;
                arr[Y][X] = color;
                break;

            case 'V':
                cin >> X >> Y1 >> Y2 >> color;
                for (i = Y1; i <= Y2; i++)
                    arr[i][X] = color;
                break;

            case 'H':
                cin >> X1 >> X2 >> Y >> color;
                for (i = X1; i <= X2; i++)
                    arr[Y][i] = color;
                break;

            case 'K':
                cin >> X1 >> Y1 >> X2 >> Y2 >> color;
                for (i = Y1; i <= Y2; i++)
                    for (j = X1; j <= X2; j++)
                        arr[i][j] = color;
                break;

            case 'F':
                cin >> Y >> X >> newColor;
                color = arr[X][Y];
                fillRange(X, Y, color, newColor, N, M);
                break;

            case 'S':
                cin >> fileName;
                cout << fileName << endl;
                display2DArray(N, M);
                break;

            case 'X'://exit(0);//or loop will terminate automatically
                break;
        }
    } while (command != 'X');
}
